{"version":3,"sources":["../src/cli.js"],"names":["require","pkg","notify","defer","version","command","alias","option","on","console","log","action","name","info","regular","playoffs","player","date","yesterday","today","tomorrow","game","commandNames","commands","map","c","_name","filter","closeMatch","process","exit","argv","length","help","parse"],"mappings":"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","file":"cli.js","sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport program from 'commander';\nimport didYouMean from 'didyoumean';\nimport isAsyncSupported from 'is-async-supported';\nimport chalk from 'chalk';\nimport updateNotifier from 'update-notifier';\n\nimport nbaGo from './command';\nimport { error, bold, nbaRed, neonGreen } from './utils/log';\n\nimport pkg from '../package.json';\n\nif (!isAsyncSupported()) {\n  require('async-to-gen/register');\n}\n\n(async () => {\n  await updateNotifier({\n    pkg,\n  }).notify({ defer: false });\n})();\n\nprogram.version(pkg.version);\n\nprogram\n  .command('player <name>')\n  .alias('p')\n  .option('-i, --info', \"Check the player's basic information\")\n  .option('-r, --regular', \"Check the player's career regular season data\")\n  .option('-p, --playoffs', \"Check the player's career playoffs data\")\n  .on('--help', () => {\n    console.log('');\n    console.log(\n      \"  Get player's basic information, regular season data and playoffs data.\"\n    );\n    console.log('');\n    console.log('  Example:');\n    console.log(\n      `           ${neonGreen(\n        'nba-go player Curry'\n      )}    => Show both Seth Curry's and Stephen Curry's basic information.`\n    );\n    console.log(\n      `           ${neonGreen(\n        'nba-go player Curry -r'\n      )} => Show both Seth Curry's and Stephen Curry's regular season data.`\n    );\n    console.log('');\n    console.log(`  For more detailed information, please check the GitHub page: ${neonGreen(\n      'https://github.com/xxhomey19/nba-go#player'\n    )}\n  `);\n  })\n  .action((name, option) => {\n    if (!option.info && !option.regular && !option.playoffs) {\n      option.info = true;\n    }\n    nbaGo.player(name, option);\n  });\n\nprogram\n  .command('game')\n  .alias('g')\n  .option('-d, --date <date>', 'Watch games at specific date')\n  .option('-y, --yesterday', \"Watch yesterday's games\")\n  .option('-t, --today', \"Watch today's games\")\n  .option('-T, --tomorrow', \"Watch tomorrow's games\")\n  .option('-f, --filter <filter>', 'Filter game choices to watch')\n  .on('--help', () => {\n    console.log('');\n    console.log('  Watch NBA live play-by-play, game preview and box score.');\n    console.log(\"  You have to enter what day's schedule at first.\");\n    console.log(\n      `  Notice that if you don't provide any option, default date will be ${neonGreen(\n        'today'\n      )}.`\n    );\n    console.log('');\n    console.log('  Example:');\n    console.log(\n      `           ${neonGreen(\n        'nba-go game -d 2017/11/11'\n      )} => Show game schedule on 2017/11/11.`\n    );\n    console.log(\n      `           ${neonGreen(\n        'nba-go game -t'\n      )}            => Show today's game schedule.`\n    );\n    console.log('');\n    console.log(`  For more detailed information, please check the GitHub page: ${neonGreen(\n      'https://github.com/xxhomey19/nba-go#game'\n    )}\n  `);\n  })\n  .action(option => {\n    if (\n      !option.date &&\n      !option.yesterday &&\n      !option.today &&\n      !option.tomorrow\n    ) {\n      option.today = true;\n    }\n    nbaGo.game(option);\n  });\n\nprogram.on('--help', () => {\n  console.log('');\n  console.log('');\n  console.log(\n    `  Welcome to ${chalk`{bold.hex('#0069b9') NBA}`} ${nbaRed('GO')} !`\n  );\n  console.log('');\n  console.log(\n    `  Wanna watch NBA game please enter: ${neonGreen('nba-go game')}`\n  );\n  console.log(\n    `  Wanna check NBA player information please enter: ${neonGreen(\n      'nba-go player <name>'\n    )}`\n  );\n  console.log('');\n  console.log(\n    `  For more detailed information please check the GitHub page: ${neonGreen(\n      'https://github.com/xxhomey19/nba-go'\n    )}`\n  );\n  console.log(\n    `  Or enter ${neonGreen('nba-go game -h')}, ${neonGreen(\n      'nba-go player -h'\n    )} to get more helpful information.`\n  );\n  console.log('');\n});\n\nprogram.option('-v --version', pkg.version);\n\nprogram.command('*').action(command => {\n  error(`Unknown command: ${bold(command)}`);\n  const commandNames = program.commands\n    .map(c => c._name)\n    .filter(name => name !== '*');\n\n  const closeMatch = didYouMean(command, commandNames);\n  if (closeMatch) {\n    error(`Did you mean ${bold(closeMatch)} ?`);\n  }\n  process.exit(1);\n});\n\nif (process.argv.length === 2) program.help();\n\nprogram.parse(process.argv);\n"]}