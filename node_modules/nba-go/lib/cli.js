#!/usr/bin/env node
'use strict';

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _commander = require('commander');

var _commander2 = _interopRequireDefault(_commander);

var _didyoumean = require('didyoumean');

var _didyoumean2 = _interopRequireDefault(_didyoumean);

var _isAsyncSupported = require('is-async-supported');

var _isAsyncSupported2 = _interopRequireDefault(_isAsyncSupported);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _updateNotifier = require('update-notifier');

var _updateNotifier2 = _interopRequireDefault(_updateNotifier);

var _command = require('./command');

var _command2 = _interopRequireDefault(_command);

var _log = require('./utils/log');

var _package = require('../package.json');

var _package2 = _interopRequireDefault(_package);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-param-reassign */

if (!(0, _isAsyncSupported2.default)()) {
  require('async-to-gen/register');
}

(0, _asyncToGenerator3.default)(function* () {
  yield (0, _updateNotifier2.default)({
    pkg: _package2.default
  }).notify({ defer: false });
})();

_commander2.default.version(_package2.default.version);

_commander2.default.command('player <name>').alias('p').option('-i, --info', "Check the player's basic information").option('-r, --regular', "Check the player's career regular season data").option('-p, --playoffs', "Check the player's career playoffs data").on('--help', () => {
  console.log('');
  console.log("  Get player's basic information, regular season data and playoffs data.");
  console.log('');
  console.log('  Example:');
  console.log(`           ${(0, _log.neonGreen)('nba-go player Curry')}    => Show both Seth Curry's and Stephen Curry's basic information.`);
  console.log(`           ${(0, _log.neonGreen)('nba-go player Curry -r')} => Show both Seth Curry's and Stephen Curry's regular season data.`);
  console.log('');
  console.log(`  For more detailed information, please check the GitHub page: ${(0, _log.neonGreen)('https://github.com/xxhomey19/nba-go#player')}
  `);
}).action((name, option) => {
  if (!option.info && !option.regular && !option.playoffs) {
    option.info = true;
  }
  _command2.default.player(name, option);
});

_commander2.default.command('game').alias('g').option('-d, --date <date>', 'Watch games at specific date').option('-y, --yesterday', "Watch yesterday's games").option('-t, --today', "Watch today's games").option('-T, --tomorrow', "Watch tomorrow's games").option('-f, --filter <filter>', 'Filter game choices to watch').on('--help', () => {
  console.log('');
  console.log('  Watch NBA live play-by-play, game preview and box score.');
  console.log("  You have to enter what day's schedule at first.");
  console.log(`  Notice that if you don't provide any option, default date will be ${(0, _log.neonGreen)('today')}.`);
  console.log('');
  console.log('  Example:');
  console.log(`           ${(0, _log.neonGreen)('nba-go game -d 2017/11/11')} => Show game schedule on 2017/11/11.`);
  console.log(`           ${(0, _log.neonGreen)('nba-go game -t')}            => Show today's game schedule.`);
  console.log('');
  console.log(`  For more detailed information, please check the GitHub page: ${(0, _log.neonGreen)('https://github.com/xxhomey19/nba-go#game')}
  `);
}).action(option => {
  if (!option.date && !option.yesterday && !option.today && !option.tomorrow) {
    option.today = true;
  }
  _command2.default.game(option);
});

_commander2.default.on('--help', () => {
  console.log('');
  console.log('');
  console.log(`  Welcome to ${_chalk2.default`{bold.hex('#0069b9') NBA}`} ${(0, _log.nbaRed)('GO')} !`);
  console.log('');
  console.log(`  Wanna watch NBA game please enter: ${(0, _log.neonGreen)('nba-go game')}`);
  console.log(`  Wanna check NBA player information please enter: ${(0, _log.neonGreen)('nba-go player <name>')}`);
  console.log('');
  console.log(`  For more detailed information please check the GitHub page: ${(0, _log.neonGreen)('https://github.com/xxhomey19/nba-go')}`);
  console.log(`  Or enter ${(0, _log.neonGreen)('nba-go game -h')}, ${(0, _log.neonGreen)('nba-go player -h')} to get more helpful information.`);
  console.log('');
});

_commander2.default.option('-v --version', _package2.default.version);

_commander2.default.command('*').action(command => {
  (0, _log.error)(`Unknown command: ${(0, _log.bold)(command)}`);
  const commandNames = _commander2.default.commands.map(c => c._name).filter(name => name !== '*');

  const closeMatch = (0, _didyoumean2.default)(command, commandNames);
  if (closeMatch) {
    (0, _log.error)(`Did you mean ${(0, _log.bold)(closeMatch)} ?`);
  }
  process.exit(1);
});

if (process.argv.length === 2) _commander2.default.help();

_commander2.default.parse(process.argv);
//# sourceMappingURL=cli.js.map