{"version":3,"sources":["../../../src/command/game/live.js"],"names":["checkOverStandard","record","standard","updateTeamQuarterScores","team","latestPeriod","teamPeriod","Array","isArray","latestQuarterScore","find","quarter","period_value","score","getIsHomeTeam","setQuarterScore","getOvertimePeriod","parseInt","getScoreboardTableHeader","scoreboardTableHeader","overtimePeriod","i","push","getTeamQuarterScores","teamQuarterScores","getAbbreviation","color","getQuarterScore","getScore","getPlayByPlayRows","allPlays","reverse","playByPlayRows","length","clock","period","eventDescription","description","home_score","visitor_score","team_abr","time","scoreboard","prop","teamColor","hex","replace","join","getTeamBoxscore","playersData","teamBoxscoreRows","mainPlayers","sort","playerA","playerB","minutes","slice","forEach","player","last_name","points","assists","rebounds_offensive","rebounds_defensive","live","homeTeam","visitorTeam","playByPlayData","gameBoxScoreData","blessedComponents","play","isFinal","pop","latestClock","screen","scoreboardTable","timeText","homeTeamScoreText","visitorTeamScoreText","playByPlayBox","boxscoreTable","homeTeamPeriod","home","linescores","visitorTeamPeriod","visitor","setRows","players","setContent","focus","get","render"],"mappings":"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","file":"live.js","sourcesContent":["import { getMainColor } from 'nba-color';\nimport { left, right } from 'wide-align';\nimport R from 'ramda';\nimport emoji from 'node-emoji';\n\nimport { bold, nbaRed, neonGreen, colorTeamName } from '../../utils/log';\n\nconst checkOverStandard = (record, standard) =>\n  +record >= standard ? nbaRed(record) : record;\n\nconst updateTeamQuarterScores = (team, latestPeriod, teamPeriod) => {\n  // eslint-disable-next-line no-param-reassign\n  teamPeriod = Array.isArray(teamPeriod) ? teamPeriod : [teamPeriod];\n\n  const latestQuarterScore = teamPeriod.find(\n    quarter => quarter.period_value === latestPeriod\n  );\n\n  if (latestQuarterScore && latestQuarterScore.score && latestPeriod) {\n    if (team.getIsHomeTeam()) {\n      team.setQuarterScore(latestPeriod, latestQuarterScore.score);\n    } else {\n      team.setQuarterScore(latestPeriod, latestQuarterScore.score);\n    }\n  }\n};\n\nconst getOvertimePeriod = latestPeriod => parseInt(latestPeriod, 10) - 4;\n\nconst getScoreboardTableHeader = latestPeriod => {\n  const scoreboardTableHeader = ['', 'Q1', 'Q2', 'Q3', 'Q4'];\n  const overtimePeriod = getOvertimePeriod(latestPeriod);\n\n  for (let i = 0; i < overtimePeriod; i += 1) {\n    scoreboardTableHeader.push(`OT${overtimePeriod}`);\n  }\n\n  scoreboardTableHeader.push('Total');\n  return scoreboardTableHeader;\n};\n\nconst getTeamQuarterScores = (team, latestPeriod) => {\n  const teamQuarterScores = [\n    `${team.getAbbreviation({\n      color: true,\n    })}`,\n  ];\n\n  for (let i = 1; i <= latestPeriod; i += 1) {\n    teamQuarterScores.push(bold(team.getQuarterScore(`${i}`)));\n  }\n  for (let i = 0; i < 4 - latestPeriod; i += 1) {\n    teamQuarterScores.push('  ');\n  }\n\n  teamQuarterScores.push(neonGreen(team.getScore()));\n\n  return teamQuarterScores;\n};\n\nconst getPlayByPlayRows = allPlays => {\n  allPlays.reverse();\n\n  const playByPlayRows = [];\n\n  for (let i = 0; i < allPlays.length; i += 1) {\n    const {\n      clock,\n      period,\n      description: eventDescription,\n      home_score,\n      visitor_score,\n      team_abr,\n    } = allPlays[i];\n\n    const overtimePeriod = getOvertimePeriod(period);\n    const time = `${+overtimePeriod > 1 ? 'OT' : 'Q'}${\n      +overtimePeriod > 1 ? overtimePeriod : period\n    } ${clock !== '' ? clock : '12:00'}`;\n\n    const scoreboard = `${right(\n      home_score > R.prop('home_score', allPlays[i + 1])\n        ? bold(neonGreen(home_score))\n        : bold(home_score),\n      3\n    )} - ${left(\n      visitor_score > R.prop('visitor_score', allPlays[i + 1])\n        ? bold(neonGreen(visitor_score))\n        : bold(visitor_score),\n      3\n    )}`;\n    const teamColor = getMainColor(team_abr)\n      ? getMainColor(team_abr).hex\n      : '#000';\n    const description = `${left(\n      colorTeamName(teamColor, `${team_abr}`),\n      3\n    )} ${eventDescription.replace(/\\[.*\\]/i, '')}\\n`;\n\n    playByPlayRows.push([time, scoreboard, description].join(' â”‚ '));\n  }\n\n  return playByPlayRows.join('\\n');\n};\n\nconst getTeamBoxscore = (team, playersData) => {\n  const teamBoxscoreRows = [];\n  teamBoxscoreRows.push([\n    team.getAbbreviation({ color: true }),\n    bold('PTS'),\n    bold('AST'),\n    bold('REB'),\n  ]);\n\n  const mainPlayers = playersData\n    .sort((playerA, playerB) => +playerB.minutes - +playerA.minutes)\n    .slice(0, 5);\n\n  mainPlayers.forEach(player => {\n    teamBoxscoreRows.push([\n      bold(left(player.last_name, 14)),\n      left(checkOverStandard(player.points, 20), 3),\n      left(checkOverStandard(player.assists, 10), 3),\n      left(\n        `${checkOverStandard(\n          +player.rebounds_offensive + +player.rebounds_defensive,\n          10\n        )}`,\n        3\n      ),\n    ]);\n  });\n\n  return teamBoxscoreRows;\n};\n\nconst live = (\n  homeTeam,\n  visitorTeam,\n  playByPlayData,\n  gameBoxScoreData,\n  blessedComponents\n) => {\n  const { play: allPlays, isFinal } = playByPlayData;\n  const { period: latestPeriod, clock: latestClock } = allPlays.slice(-1).pop();\n  const {\n    screen,\n    scoreboardTable,\n    timeText,\n    homeTeamScoreText,\n    visitorTeamScoreText,\n    playByPlayBox,\n    boxscoreTable,\n  } = blessedComponents;\n\n  const {\n    home: { linescores: { period: homeTeamPeriod } },\n    visitor: { linescores: { period: visitorTeamPeriod } },\n  } = gameBoxScoreData;\n\n  updateTeamQuarterScores(homeTeam, latestPeriod, homeTeamPeriod);\n  updateTeamQuarterScores(visitorTeam, latestPeriod, visitorTeamPeriod);\n\n  scoreboardTable.setRows([\n    getScoreboardTableHeader(latestPeriod),\n    getTeamQuarterScores(homeTeam, latestPeriod),\n    getTeamQuarterScores(visitorTeam, latestPeriod),\n  ]);\n\n  boxscoreTable.setRows([\n    ...getTeamBoxscore(homeTeam, gameBoxScoreData.home.players.player),\n    ...getTeamBoxscore(visitorTeam, gameBoxScoreData.visitor.players.player),\n  ]);\n\n  playByPlayBox.setContent(getPlayByPlayRows(allPlays));\n  playByPlayBox.focus();\n\n  if (isFinal) {\n    timeText.setContent(bold('Final'));\n  } else {\n    const overtimePeriod = getOvertimePeriod(latestPeriod);\n    timeText.setContent(\n      bold(\n        `${emoji.get('stopwatch')}  ${+overtimePeriod > 1 ? 'OT' : 'Q'}${\n          +overtimePeriod > 1 ? overtimePeriod : latestPeriod\n        } ${latestClock}`\n      )\n    );\n  }\n\n  homeTeamScoreText.setContent(homeTeam.getScore());\n  visitorTeamScoreText.setContent(visitorTeam.getScore());\n\n  screen.render();\n};\n\nexport default live;\n"]}