{"version":3,"sources":["../../../src/command/game/boxScore.js"],"names":["alignCenter","columns","map","content","hAlign","vAlign","checkOverStandard","record","standard","checkGameHigh","players","recordVal","recordArr","player","Math","max","createTeamBoxScore","team","getPlayers","stats","getGameStats","boxScoreTable","push","colSpan","getFullName","color","forEach","first_name","last_name","position_short","minutes","field_goals_made","field_goals_attempted","three_pointers_made","three_pointers_attempted","free_throws_made","free_throws_attempted","plus_minus","rebounds_offensive","rebounds_defensive","assists","steals","blocks","turnovers","fouls","points","totalRebounds","parseInt","console","log","toString","boxScore","homeTeam","visitorTeam"],"mappings":"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","file":"boxScore.js","sourcesContent":["import { basicTable } from '../../utils/table';\nimport { bold, neonGreen, nbaRed } from '../../utils/log';\n\nconst alignCenter = columns =>\n  columns.map(content => ({ content, hAlign: 'left', vAlign: 'center' }));\n\nconst checkOverStandard = (record, standard) =>\n  +record >= standard ? nbaRed(record) : record;\n\nconst checkGameHigh = (players, record, recordVal, standard) => {\n  const recordArr = players.map(player => Number.parseInt(player[record], 10));\n  return recordVal >= Math.max(...recordArr)\n    ? neonGreen(recordVal)\n    : checkOverStandard(recordVal, standard);\n};\n\nconst createTeamBoxScore = team => {\n  const players = team.getPlayers();\n  const stats = team.getGameStats();\n  const boxScoreTable = basicTable();\n\n  boxScoreTable.push(\n    [\n      {\n        colSpan: 16,\n        content: team.getFullName({ color: true }),\n        hAlign: 'left',\n        vAlign: 'center',\n      },\n    ],\n    alignCenter([\n      bold('PLAYER'),\n      bold('POS'),\n      bold('MIN'),\n      bold('FG'),\n      bold('3FG'),\n      bold('FT'),\n      bold('+/-'),\n      bold('OREB'),\n      bold('DREB'),\n      bold('REB'),\n      bold('AST'),\n      bold('STL'),\n      bold('BLK'),\n      bold('TO'),\n      bold('PF'),\n      bold('PTS'),\n    ])\n  );\n\n  players.forEach(player => {\n    const {\n      first_name,\n      last_name,\n      position_short,\n      minutes,\n      field_goals_made,\n      field_goals_attempted,\n      three_pointers_made,\n      three_pointers_attempted,\n      free_throws_made,\n      free_throws_attempted,\n      plus_minus,\n      rebounds_offensive,\n      rebounds_defensive,\n      assists,\n      steals,\n      blocks,\n      turnovers,\n      fouls,\n      points,\n    } = player;\n\n    const totalRebounds = +rebounds_offensive + +rebounds_defensive;\n\n    boxScoreTable.push(\n      alignCenter([\n        bold(`${first_name} ${last_name}`),\n        bold(position_short),\n        checkGameHigh(players, 'minutes', minutes, 35),\n        `${field_goals_made}-${field_goals_attempted}`,\n        `${three_pointers_made}-${three_pointers_attempted}`,\n        `${free_throws_made}-${free_throws_attempted}`,\n        checkGameHigh(players, 'plus_minus', plus_minus, 15),\n        checkGameHigh(players, 'rebounds_offensive', rebounds_offensive, 10),\n        checkGameHigh(players, 'rebounds_defensive', rebounds_defensive, 10),\n        checkGameHigh(players, 'totalRebounds', totalRebounds, 10),\n        checkGameHigh(players, 'assists', assists, 10),\n        checkGameHigh(players, 'steals', steals, 5),\n        checkGameHigh(players, 'blocks', blocks, 5),\n        checkGameHigh(players, 'turnovers', turnovers, 5),\n        checkGameHigh(players, 'fouls', fouls, 6),\n        checkGameHigh(players, 'points', points, 20),\n      ])\n    );\n  });\n\n  const {\n    points,\n    field_goals_made,\n    field_goals_attempted,\n    free_throws_made,\n    free_throws_attempted,\n    three_pointers_made,\n    three_pointers_attempted,\n    rebounds_offensive,\n    rebounds_defensive,\n    assists,\n    fouls,\n    steals,\n    turnovers,\n    blocks,\n  } = stats;\n\n  boxScoreTable.push(\n    alignCenter([\n      'Totals',\n      '',\n      '',\n      bold(`${field_goals_made}-${field_goals_attempted}`),\n      bold(`${three_pointers_made}-${three_pointers_attempted}`),\n      bold(`${free_throws_made}-${free_throws_attempted}`),\n      '',\n      bold(rebounds_offensive),\n      bold(rebounds_defensive),\n      bold(parseInt(rebounds_offensive, 10) + parseInt(rebounds_defensive, 10)),\n      bold(assists),\n      bold(steals),\n      bold(blocks),\n      bold(turnovers),\n      bold(fouls),\n      bold(neonGreen(points)),\n    ])\n  );\n\n  console.log(boxScoreTable.toString());\n};\n\nconst boxScore = (homeTeam, visitorTeam) => {\n  createTeamBoxScore(homeTeam);\n  console.log('');\n  createTeamBoxScore(visitorTeam);\n};\n\nexport default boxScore;\n"]}