{"version":3,"sources":["../../../src/command/game/scoreboard.js"],"names":["vAlignCenter","columns","map","column","content","vAlign","hAlign","getStartingPlayers","team","getPlayers","filter","player","starting_position","on_court","name","first_name","last_name","position","position_short","teamGameLeaders","homeTeam","visitorTeam","field","colSpan","getGameLeaders","leader","FirstName","LastName","StatValue","scoreboard","date","time","arena","city","state","display_year","display_season","scoreboardTable","formatedTime","slice","homeTeamStartingPlayers","visitorTeamStartingPlayers","push","getName","color","indexOf","getAbbreviation","getWins","getLoses","getQuarterScore","getScore","get","find","console","log","toString"],"mappings":"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","file":"scoreboard.js","sourcesContent":["import format from 'date-fns/format';\nimport emoji from 'node-emoji';\nimport { center } from 'wide-align';\n\nimport { bold, nbaRed, neonGreen } from '../../utils/log';\nimport { basicTable } from '../../utils/table';\n\nconst vAlignCenter = columns =>\n  columns.map(column => {\n    if (typeof column === 'string') {\n      return { content: column, vAlign: 'center', hAlign: 'center' };\n    }\n\n    return { ...column, vAlign: 'center' };\n  });\n\nconst getStartingPlayers = team =>\n  team\n    .getPlayers()\n    .filter(\n      player => player.starting_position !== '' || player.on_court === '1'\n    )\n    .map(player => ({\n      name: `${player.first_name} ${player.last_name}`,\n      position: player.starting_position || player.position_short,\n    }));\n\nconst teamGameLeaders = (homeTeam, visitorTeam, field) =>\n  vAlignCenter([\n    {\n      colSpan: 3,\n      content: bold(\n        `${homeTeam.getGameLeaders(field).leader[0].FirstName} ${\n          homeTeam.getGameLeaders(field).leader[0].LastName\n        }`\n      ),\n      hAlign: 'right',\n    },\n    nbaRed(homeTeam.getGameLeaders(field).StatValue),\n    {\n      colSpan: 2,\n      content: field,\n      hAlign: 'center',\n    },\n    nbaRed(visitorTeam.getGameLeaders(field).StatValue),\n    {\n      colSpan: 3,\n      content: bold(\n        `${visitorTeam.getGameLeaders(field).leader[0].FirstName} ${\n          visitorTeam.getGameLeaders(field).leader[0].LastName\n        }`\n      ),\n      hAlign: 'left',\n    },\n  ]);\n\nconst scoreboard = (\n  homeTeam,\n  visitorTeam,\n  { date, time, arena, city, state, display_year, display_season }\n) => {\n  const scoreboardTable = basicTable();\n\n  const formatedTime = `${time.slice(0, 2)}:${time.slice(2, 4)}`;\n\n  const homeTeamStartingPlayers = getStartingPlayers(homeTeam);\n  const visitorTeamStartingPlayers = getStartingPlayers(visitorTeam);\n\n  scoreboardTable.push(\n    vAlignCenter([\n      {\n        colSpan: 10,\n        content: bold(`${display_year} ${display_season}`),\n        hAlign: 'center',\n      },\n    ]),\n    vAlignCenter([\n      {\n        colSpan: 2,\n        content: bold(homeTeam.getName({ color: true })),\n        hAlign: 'center',\n      },\n      {\n        colSpan: 6,\n        content: bold('Final'),\n        hAlign: 'center',\n      },\n      {\n        colSpan: 2,\n        content: bold(visitorTeam.getName({ color: true })),\n        hAlign: 'center',\n      },\n    ]),\n    vAlignCenter([\n      'PG',\n      {\n        content: bold(\n          homeTeamStartingPlayers.filter(\n            player => player.position.indexOf('G') > -1\n          )[1].name\n        ),\n        hAlign: 'left',\n      },\n      bold('Team'),\n      bold('Q1'),\n      bold('Q2'),\n      bold('Q3'),\n      bold('Q4'), // FIXME OT\n      bold(center('Total', 9)),\n      'PG',\n      {\n        content: bold(\n          visitorTeamStartingPlayers.filter(\n            player => player.position.indexOf('G') > -1\n          )[1].name\n        ),\n        hAlign: 'left',\n      },\n    ]),\n    vAlignCenter([\n      'SG',\n      {\n        content: bold(\n          homeTeamStartingPlayers.filter(\n            player => player.position.indexOf('G') > -1\n          )[0].name\n        ),\n        hAlign: 'left',\n      },\n      `${homeTeam.getAbbreviation({\n        color: true,\n      })} (${homeTeam.getWins()}-${homeTeam.getLoses()})`,\n      bold(homeTeam.getQuarterScore('1')),\n      bold(homeTeam.getQuarterScore('2')),\n      bold(homeTeam.getQuarterScore('3')),\n      bold(homeTeam.getQuarterScore('4')),\n      bold(neonGreen(homeTeam.getScore())),\n      'SG',\n      {\n        content: bold(\n          visitorTeamStartingPlayers.filter(\n            player => player.position.indexOf('G') > -1\n          )[0].name\n        ),\n        hAlign: 'left',\n      },\n    ]),\n    vAlignCenter([\n      'SF',\n      {\n        content: bold(\n          homeTeamStartingPlayers.filter(\n            player => player.position.indexOf('F') > -1\n          )[1].name\n        ),\n        hAlign: 'left',\n      },\n      `${visitorTeam.getAbbreviation({\n        color: true,\n      })} (${visitorTeam.getWins()}-${visitorTeam.getLoses()})`,\n      bold(visitorTeam.getQuarterScore('1')),\n      bold(visitorTeam.getQuarterScore('2')),\n      bold(visitorTeam.getQuarterScore('3')),\n      bold(visitorTeam.getQuarterScore('4')),\n      bold(neonGreen(visitorTeam.getScore())),\n      'SF',\n      {\n        content: bold(\n          visitorTeamStartingPlayers.filter(\n            player => player.position.indexOf('F') > -1\n          )[1].name\n        ),\n        hAlign: 'left',\n      },\n    ]),\n    vAlignCenter([\n      'PF',\n      {\n        content: bold(\n          homeTeamStartingPlayers.filter(\n            player => player.position.indexOf('F') > -1\n          )[0].name\n        ),\n        hAlign: 'left',\n      },\n      {\n        colSpan: 6,\n        content: bold(\n          `${emoji.get('calendar')}  ${format(date, 'YYYY/MM/DD')} ${\n            formatedTime\n          }`\n        ),\n        hAlign: 'center',\n      },\n      'PF',\n      {\n        content: bold(\n          visitorTeamStartingPlayers.filter(\n            player => player.position.indexOf('F') > -1\n          )[0].name\n        ),\n        hAlign: 'left',\n      },\n    ]),\n    vAlignCenter([\n      'C',\n      {\n        content: bold(\n          homeTeamStartingPlayers.find(player => player.position === 'C').name\n        ),\n        hAlign: 'left',\n      },\n      {\n        colSpan: 6,\n        content: bold(`${emoji.get('house')}  ${arena} │ ${city}, ${state}`),\n        hAlign: 'center',\n      },\n      'C',\n      {\n        content: bold(\n          visitorTeamStartingPlayers.find(player => player.position === 'C')\n            .name\n        ),\n        hAlign: 'left',\n      },\n    ]),\n    [],\n    vAlignCenter([\n      {\n        colSpan: 10,\n        content: bold('Game Record Leaders'),\n        hAlign: 'center',\n      },\n    ]),\n    teamGameLeaders(homeTeam, visitorTeam, 'Points'),\n    teamGameLeaders(homeTeam, visitorTeam, 'Assists'),\n    teamGameLeaders(homeTeam, visitorTeam, 'Rebounds')\n  );\n\n  console.log(scoreboardTable.toString());\n};\n\nexport default scoreboard;\n"]}