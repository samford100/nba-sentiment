{"version":3,"sources":["../../../src/command/player/index.js"],"names":["catchError","err","apiName","console","log","process","exit","player","playerName","option","updatePlayers","_players","searchPlayers","_player","commonPlayerInfo","playerHeadlineStats","playerInfo","PlayerID","playerId","_commonPlayerInfo","_playerHeadlineStats","info","regular","seasonTotalsRegularSeason","careerTotalsRegularSeason","playerProfile","_seasonTotalsRegularSeason","_careerTotalsRegularSeason","nowTeamAbbreviation","teamAbbreviation","seasonTtpe","seasonTotals","careerTotals","playoffs","seasonTotalsPostSeason","careerTotalsPostSeason","_seasonTotalsPostSeason","_careerTotalsPostSeason","length","firstName","lastName","get","concurrency"],"mappings":"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","file":"index.js","sourcesContent":["import pMap from 'p-map';\nimport emoji from 'node-emoji';\n\nimport playerInfo from './info';\nimport seasonStats from './seasonStats';\n\nimport NBA from '../../utils/nba';\nimport { error } from '../../utils/log';\n\nconst catchError = (err, apiName) => {\n  error(err);\n  console.log('');\n  error(`Oops, ${apiName} goes wrong.`);\n  error(\n    'Please run nba-go again.\\nIf it still does not work, feel free to open an issue on https://github.com/xxhomey19/nba-go/issues'\n  );\n  process.exit(1);\n};\n\nconst player = async (playerName, option) => {\n  await NBA.updatePlayers();\n\n  const _players = await NBA.searchPlayers(playerName);\n\n  pMap(\n    _players,\n    async _player => {\n      let commonPlayerInfo;\n      let playerHeadlineStats;\n\n      try {\n        const {\n          commonPlayerInfo: _commonPlayerInfo,\n          playerHeadlineStats: _playerHeadlineStats,\n        } = await NBA.playerInfo({\n          PlayerID: _player.playerId,\n        });\n\n        commonPlayerInfo = _commonPlayerInfo;\n        playerHeadlineStats = _playerHeadlineStats;\n      } catch (err) {\n        catchError(err, 'NBA.playerInfo()');\n      }\n\n      if (option.info) {\n        playerInfo({ ...commonPlayerInfo[0], ...playerHeadlineStats[0] });\n      }\n\n      if (option.regular) {\n        let seasonTotalsRegularSeason;\n        let careerTotalsRegularSeason;\n\n        try {\n          const {\n            seasonTotalsRegularSeason: _seasonTotalsRegularSeason,\n            careerTotalsRegularSeason: _careerTotalsRegularSeason,\n          } = await NBA.playerProfile({\n            PlayerID: _player.playerId,\n          });\n\n          seasonTotalsRegularSeason = _seasonTotalsRegularSeason;\n          careerTotalsRegularSeason = _careerTotalsRegularSeason;\n        } catch (err) {\n          catchError(err, 'NBA.playerProfile()');\n        }\n\n        commonPlayerInfo[0].nowTeamAbbreviation =\n          commonPlayerInfo[0].teamAbbreviation;\n\n        seasonStats({\n          seasonTtpe: 'Regular Season',\n          ...commonPlayerInfo[0],\n          seasonTotals: seasonTotalsRegularSeason,\n          careerTotals: careerTotalsRegularSeason[0],\n        });\n      }\n\n      if (option.playoffs) {\n        let seasonTotalsPostSeason;\n        let careerTotalsPostSeason;\n        try {\n          const {\n            seasonTotalsPostSeason: _seasonTotalsPostSeason,\n            careerTotalsPostSeason: _careerTotalsPostSeason,\n          } = await NBA.playerProfile({\n            PlayerID: _player.playerId,\n          });\n\n          seasonTotalsPostSeason = _seasonTotalsPostSeason;\n          careerTotalsPostSeason = _careerTotalsPostSeason;\n        } catch (err) {\n          catchError(err, 'NBA.playerProfile()');\n        }\n\n        if (careerTotalsPostSeason.length === 0) {\n          console.log(\n            `Sorry, ${_player.firstName} ${\n              _player.lastName\n            } doesn't have any playoffs data ${emoji.get('confused')}`\n          );\n        } else {\n          commonPlayerInfo[0].nowTeamAbbreviation =\n            commonPlayerInfo[0].teamAbbreviation;\n\n          seasonStats({\n            seasonTtpe: 'Playoffs',\n            ...commonPlayerInfo[0],\n            seasonTotals: seasonTotalsPostSeason,\n            careerTotals: careerTotalsPostSeason[0],\n          });\n        }\n      }\n    },\n    { concurrency: 1 }\n  );\n};\n\nexport default player;\n"]}